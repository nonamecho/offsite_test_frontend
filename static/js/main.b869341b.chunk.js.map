{"version":3,"sources":["components/TopFree.js","components/TopGrossing.js","App.js","serviceWorker.js","index.js"],"names":["AppIcon","_ref","alt","src","type","react_default","a","createElement","style","styles","circleImg","roundImg","TopFreeAppCard","_ref2","rank","app","Paper","onClick","window","open","url","cardCtn","Typography","color","variant","TopFree_AppIcon","id","artworkUrl100","Box","width","name","captionText","genres","map","idx","key","artistName","TopFree","_ref3","data","marginBottom","Grid","container","spacing","item","xs","sm","TopFree_TopFreeAppCard","height","borderRadius","display","flexDirection","justifyContent","padding","cursor","TopGrossingCard","TopGrossing_AppIcon","TopGrossing","hScrollCtn","TopGrossing_TopGrossingCard","overflow","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isFetching","topFreeData","topGrossingData","filterTopFreeData","filterTopGrossingData","setState","fetch","topFreeRes","topGrossingRes","json","then","_this2","feed","results","_this3","_this$state","react","AppBar","position","Toolbar","Container","toolBarCtn","maxWidth","Input","searchInput","placeholder","disableUnderline","endAdornment","Search","onChange","e","keyword","target","value","_this3$state","filter","includes","contentCtn","length","components_TopGrossing","components_TopFree","CircularProgress","circularProgress","React","Component","marginTop","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","top","left","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b869341b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Paper, Typography, Box, Grid } from \"@material-ui/core\";\n\nconst AppIcon = ({ alt, src, type }) => (\n  <img\n    alt={alt}\n    src={src}\n    style={type === \"c\" ? styles.circleImg : styles.roundImg}\n  />\n);\n\nconst TopFreeAppCard = ({ rank, app }) => (\n  <Paper onClick={() => window.open(app.url)} style={styles.cardCtn}>\n    <Typography color={\"primary\"} variant={\"h5\"}>\n      {rank}\n    </Typography>\n    <AppIcon\n      alt={app.id}\n      src={app.artworkUrl100}\n      type={rank % 2 === 0 ? \"c\" : \"r\"}\n    />\n    <Box style={{ width: \"50%\" }}>\n      <Typography variant={\"subtitle1\"}>{app.name}</Typography>\n      <Typography style={styles.captionText} variant={\"caption\"}>\n        {app.genres.map((genres, idx) => (\n          <span key={idx}>{genres.name} </span>\n        ))}\n      </Typography>\n      <br />\n      <Typography style={styles.captionText} variant={\"caption\"}>\n        {app.artistName}\n      </Typography>\n    </Box>\n  </Paper>\n);\n\nconst TopFree = ({ data }) => {\n  return (\n    <Box>\n      <Typography style={{ marginBottom: 20 }} variant={\"h6\"}>\n        {\"熱門免費\"}\n      </Typography>\n      <Grid container spacing={3}>\n        {data &&\n          data.map((app, idx) => (\n            <Grid key={idx} item xs={12} sm={6}>\n              <TopFreeAppCard rank={idx + 1} app={app} />\n            </Grid>\n          ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TopFree;\n\nconst styles = {\n  roundImg: { width: 100, height: 100, borderRadius: 10 },\n  circleImg: { width: 100, height: 100, borderRadius: 50 },\n  cardCtn: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 5,\n    cursor: \"pointer\"\n  },\n  captionText: { color: \"grey\" }\n};\n","import React from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst AppIcon = ({ alt, src, type }) => (\n  <img\n    alt={alt}\n    src={src}\n    style={type === \"c\" ? styles.circleImg : styles.roundImg}\n  />\n);\n\nconst TopGrossingCard = ({ app }) => (\n  <Box onClick={() => window.open(app.url)} style={styles.cardCtn}>\n    <AppIcon alt={app.id} src={app.artworkUrl100} type={\"r\"} />\n    <Typography variant={\"caption\"}>{app.name}</Typography>\n    <br />\n    <Typography style={styles.captionText} variant={\"caption\"}>\n      {app.artistName}\n    </Typography>\n  </Box>\n);\nconst TopGrossing = ({ data }) => {\n  return (\n    <Box>\n      <Typography variant={\"h6\"}>{\"最佳銷量\"}</Typography>\n      <Box style={styles.hScrollCtn}>\n        {data &&\n          data.map((app, idx) => <TopGrossingCard key={idx} app={app} />)}\n      </Box>\n    </Box>\n  );\n};\n\nexport default TopGrossing;\n\nconst styles = {\n  circleImg: { width: 150, height: 150, borderRadius: 50 },\n  roundImg: { width: 150, height: 150, borderRadius: 10 },\n  cardCtn: { padding: 20, cursor: \"pointer\" },\n  captionText: { color: \"grey\" },\n  hScrollCtn: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"auto\",\n    width: \"100%\"\n  }\n};\n","import React, { Fragment } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  CircularProgress,\n  Container,\n  Input\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport { TopFree, TopGrossing } from \"./components\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      topFreeData: null,\n      topGrossingData: null,\n      filterTopFreeData: null,\n      filterTopGrossingData: null\n    };\n  }\n  async componentDidMount() {\n    await this.setState({ isFetching: true });\n    const topFreeRes = await fetch(\n      `https://nonamecho.eu-4.evennode.com/topFree.json`\n    );\n    const topGrossingRes = await fetch(\n      `https://nonamecho.eu-4.evennode.com/topGrossing.json`\n    );\n    await topFreeRes.json().then(data => {\n      this.setState({\n        topFreeData: data.feed.results,\n        filterTopFreeData: data.feed.results\n      });\n    });\n    await topGrossingRes.json().then(data => {\n      this.setState({\n        topGrossingData: data.feed.results,\n        filterTopGrossingData: data.feed.results\n      });\n    });\n    this.setState({ isFetching: false });\n  }\n  render() {\n    const { isFetching, filterTopFreeData, filterTopGrossingData } = this.state;\n    return (\n      <Fragment>\n        <AppBar position={\"sticky\"}>\n          <Toolbar>\n            <Container style={styles.toolBarCtn} maxWidth=\"md\">\n              <Input\n                style={styles.searchInput}\n                placeholder={\"搜尋\"}\n                disableUnderline\n                endAdornment={<SearchIcon />}\n                onChange={e => {\n                  const keyword = e.target.value;\n                  const { topFreeData, topGrossingData } = this.state;\n                  this.setState({\n                    filterTopFreeData: topFreeData.filter(\n                      data =>\n                        data.name.includes(keyword) ||\n                        data.artistName.includes(keyword)\n                    ),\n                    filterTopGrossingData: topGrossingData.filter(\n                      data =>\n                        data.name.includes(keyword) ||\n                        data.artistName.includes(keyword)\n                    )\n                  });\n                }}\n              />\n            </Container>\n          </Toolbar>\n        </AppBar>\n        {!isFetching && (\n          <Container style={styles.contentCtn} maxWidth=\"md\">\n            {filterTopGrossingData && filterTopGrossingData.length > 0 && (\n              <TopGrossing data={filterTopGrossingData} />\n            )}\n            {filterTopFreeData && filterTopFreeData.length > 0 && (\n              <TopFree data={filterTopFreeData} />\n            )}\n          </Container>\n        )}\n        {isFetching && <CircularProgress style={styles.circularProgress} />}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n\nconst styles = {\n  toolBarCtn: { display: \"flex\", justifyContent: \"center\" },\n  contentCtn: { marginTop: 20 },\n  searchInput: {\n    backgroundColor: \"white\",\n    borderRadius: 5,\n    paddingLeft: 20,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    width: 300\n  },\n  circularProgress: { position: \"absolute\", top: \"50%\", left: \"50%\" }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}